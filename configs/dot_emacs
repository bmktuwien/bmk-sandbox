;;; Commentary:
;;; DOTEMACS

;;; Code:

;;; Load initial stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(add-to-list 'load-path "~/.emacs.d/inits")
(add-to-list 'load-path "~/.emacs.d/themes")
(add-to-list 'custom-theme-load-path
             (expand-file-name "~/.emacs.d/themes"))

(load "~/.emacs.d/init.el")

(load "haskell_mode_init.el")
(load "python_mode_init.el")
(load "cc_mode_init.el")

(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))

;;; Appearance
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'font-lock)
(global-font-lock-mode             t)
(setq font-lock-maximum-decoration t)
(set-scroll-bar-mode               nil)

(when (require 'dream-theme nil 'noerror)
  (load-theme 'dream t nil))

(set-face-font 'default "-unknown-DejaVu Sans Mono-normal-normal-normal-*-14-*-*-*-m-0-iso10646-1")

;;; Custom settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq          prelude-guru             nil)
(setq          prelude-flyspell         nil)
(setq-default  show-trailing-whitespace t)

(desktop-save-mode  1)
(ido-mode           1)

;;; Custom Bindings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(global-set-key (kbd "C-x g")       'goto-line)
(global-set-key (kbd "C-x C-b")     'buffer-menu)
(global-set-key (kbd "C-x C-y")     'indent-region)
(global-set-key (kbd "M-SPC")       'dabbrev-expand)
(global-set-key (kbd "C-x a r")     'align-regexp)
(global-set-key (kbd "C-<return>")  'other-window)
(global-set-key [f2]                'eshell)
(global-set-key [f3]                'ansi-term)
(global-set-key [f4]                'query-replace)
(global-set-key [f5]                'switch-to-buffer)
(global-set-key [f6]                'sr-speedbar-toggle)
(global-set-key [f7]                'project-explorer-open)
;(global-set-key [f8]                'find-grep)

;;; Minibuffer
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq
 enable-recursive-minibuffers nil      ;;  don't allow mb cmds in the mb
 max-mini-window-height       3        ;;  max 3 lines
 minibuffer-scroll-window     t        ;;  C-M-v scrolls....
 resize-mini-windows          t)

(icomplete-mode t)                     ;; completion in minibuffer
(setq
 icomplete-prospects-height 2          ;; don't spam my minibuffer
 icomplete-compute-delay    0)         ;; don't wait

;;; Shell
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq shell-file-name "bash")
(setq shell-command-switch "-ic")

(defun my-term-hook ()
  (setq show-trailing-whitespace nil))
(add-hook 'term-mode-hook 'my-term-hook)

;;; Modules
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)

;;----------------------------------------------------------
(require 'project-explorer)

;;----------------------------------------------------------
(setq auto-highlight-symbol-mode-map
      (let ((map (make-sparse-keymap)))
        (define-key map (kbd "s-<left>"    ) 'ahs-backward            )
        (define-key map (kbd "s-<right>"   ) 'ahs-forward             )
        (define-key map (kbd "M-s-<left>"  ) 'ahs-backward-definition )
        (define-key map (kbd "M-s-<right>" ) 'ahs-forward-definition  )
        (define-key map (kbd "M--"         ) 'ahs-back-to-start       )
        (define-key map (kbd "C-x C-'"     ) 'ahs-change-range        )
        (define-key map (kbd "C-x C-a"     ) 'ahs-edit-mode           )
        map))

(require 'auto-highlight-symbol)
(global-auto-highlight-symbol-mode)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;EOF
