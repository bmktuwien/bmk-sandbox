;;; Commentary:
;;; DOTEMACS --- my simple config file

;;; Code:

;;; Load initial stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d/libs")

(load "~/.emacs.d/init.el")

(load "haskell_mode_init.el")
(load "cc_mode_init.el")
(load "c-eldoc.el")
(load "revbufs.el")

(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Appearance
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'font-lock)

(disable-theme          'zenburn)
(global-font-lock-mode  t)
(setq                   font-lock-maximum-decoration t)
(set-foreground-color   "white")
(set-background-color   "black")
(set-scroll-bar-mode    nil)
(setq                   ring-bell-function 'ignore)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Custom settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq               prelude-guru                     nil)
(setq               prelude-flyspell                 nil)
(setq               mac-right-option-modifier        nil)
(setq-default       show-trailing-whitespace t)

(desktop-save-mode  1)
(ido-mode           1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Custom Bindings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(global-set-key (kbd "C-x g")       'goto-line)
(global-set-key (kbd "C-x C-b")     'buffer-menu)
(global-set-key (kbd "C-x C-y")     'indent-region)
(global-set-key (kbd "C-x C-r")     'comment-region)
(global-set-key (kbd "M-SPC")       'dabbrev-expand)
(global-set-key (kbd "C-x a r")     'align-regexp)
(global-set-key (kbd "C-<return>")  'other-window)
(global-set-key [f2]                'eshell)
(global-set-key [f3]                'ansi-term)
(global-set-key [f4]                'query-replace)
(global-set-key [f5]                'switch-to-buffer)
(global-set-key [f6]                'sr-speedbar-toggle)
(global-set-key [f7]                'buffer-menu)
(global-set-key [f8]                'find-grep)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Shell
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq  shell-file-name      "zsh")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Modules
;;----------------------------------------------------------

(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)

;;----------------------------------------------------------
(require 'yasnippet)
(yas-global-mode 1)

(add-hook 'term-mode-hook (lambda()
                            (setq yas-dont-activate t)))
;;----------------------------------------------------------
(defun ac-c-header-init ()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/usr/include"))

(add-hook 'c++-mode-hook 'ac-c-header-init)
(add-hook 'c-mode-hook 'ac-c-header-init)

;;----------------------------------------------------------
(define-key global-map (kbd "C-c ,") 'iedit-mode)

;;----------------------------------------------------------
(require 'semantic/ia)
(require 'semantic/symref)
(require 'semantic/bovine/gcc)

(semantic-mode 1)
(global-ede-mode 1)

(global-semantic-idle-scheduler-mode)
(global-semantic-idle-completions-mode)
(global-semantic-decoration-mode)
(global-semantic-highlight-func-mode)
(global-semantic-show-unmatched-syntax-mode)

(semanticdb-enable-gnu-global-databases 'c-mode)
(semanticdb-enable-gnu-global-databases 'c++-mode)

(semantic-add-system-include "/usr/include" 'c-mode)
(semantic-add-system-include "/usr/include" 'c++-mode)

(defun add-semantic-to-autocomplete()
  (add-to-list 'ac-sources 'ac-source-semantic-raw)
  (local-set-key (kbd "M-.") 'semantic-ia-fast-jump))
(add-hook 'c-mode-common-hook 'add-semantic-to-autocomplete)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Hooks
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun my-term-hook ()
  (setq show-trailing-whitespace nil))
(add-hook 'term-mode-hook 'my-term-hook)

;;; .emacs ends here
